//Potentially usable code at a later point or in a different project
// func (hdr *PrefetchHeader) MarshalJSON() []byte {
// 	type Alias PrefetchHeader
// 	j, err := json.MarshalIndent(&struct {
// 		Signature string
// 		Exename   string
// 		Version   int
// 		Filesize  uint32
// 		Hash      string
// 		*Alias
// 	}{
// 		Signature: string(hdr.Signature[:]),
// 		Exename:   formatExeName(hdr.Exename[:]),
// 		Version:   formatVersion(hdr.Version[:]),
// 		//Filesize:  formatFileSize(hdr.Filesize[:]),
// 		Filesize: binary.LittleEndian.Uint32(hdr.Filesize[:]),
// 		Hash:     hex.EncodeToString(hdr.Hash[:]),
// 		Alias:    (*Alias)(hdr),
// 	}, "", "    ")
// 	if err != nil {
// 		log.Fatal(err)
// 	}
// 	return j
// }

// func unMarshalJSON(data []byte) error {
// 	var headers []PrefetchHeader
// 	s, err := json.Unmarshal(data, &headers)
// 	if err != nil {
// 		log.Fatal(err)
// 	}
// 	fmt.Println(string(s))
// 	return nil
// }